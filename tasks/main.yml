---
# tasks file for ansible-role-cvmfs
#
- name: Import tasks for RedHat
  ansible.builtin.include_tasks: redhat.yml
  when: ansible_os_family == "RedHat"

- name: Import tasks for Debian
  ansible.builtin.include_tasks: debian.yml
  when: ansible_os_family == "Debian"

## Common tasks
- name: Lineinfile fuse.conf to enable user_allow_other
  ansible.builtin.lineinfile:
    dest: /etc/fuse.conf
    regexp: '^user_allow_other$'
    line: 'user_allow_other'
    backup: true

- name: Add a cms.cern.ch.local if cms_site is defined
  ansible.builtin.template:
    src: cms.cern.ch.local
    dest: /etc/cvmfs/config.d/cms.cern.ch.local
    mode: 0644
  when: cms_site is defined

- name: Template cvmfs/default.local if none exists - no overwrite
  ansible.builtin.template:
    src: default.local
    dest: /etc/cvmfs/default.local
    force: false
    mode: 0644
  when: cvmfs_overwrite_default_local

- name: Template cvmfs/default.local if it exists - overwrites
  ansible.builtin.template:
    src: default.local
    dest: /etc/cvmfs/default.local
    force: true
    mode: 0644
    backup: true
  when: cvmfs_overwrite_default_local

- name: Ensure /etc/auto.master.d/ exists
  ansible.builtin.file:
    path: "/etc/auto.master.d"
    state: directory
    mode: 0755
    owner: "root"
    group: "root"

- name: Template /etc/auto.master.d/cvmfs.autofs
  ansible.builtin.template:
    src: cvmfs.autofs
    dest: /etc/auto.master.d/cvmfs.autofs
    backup: true
    mode: 0644
    owner: "root"
    group: "root"
  when: (ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 7) or
        (ansible_os_family == "Debian")
  notify: restart autofs
  register: autofsconfig

- name: Ensure that autofs is running and enabled
  ansible.builtin.service:
    name: autofs
    state: started
    enabled: true
  when: ansible_virtualization_type != "docker" and ansible_connection != 'chroot'

- name: Enable autofs for chroot images
  ansible.builtin.systemd:
    name: autofs
    enabled: true
  when: ansible_connection == 'chroot'

- name: Flush the handlers - so that autofs settings are applied before we run chksetup
  ansible.builtin.meta: flush_handlers

- name: Cvmfs_config chksetup which causes the playbook to fail when there are errors
  ansible.builtin.command: cvmfs_config chksetup
  register: cvmfschksetup
  failed_when: cvmfschksetup.rc != 0
  changed_when: false
  when: ansible_virtualization_type != "docker" and ansible_connection != 'chroot'

# - name: print output of cvmfschksetup
#   debug: var=cvmfschksetup["stdout"]
#   when: cvmfschksetup.changed

- name: Check that the repo is mounted
  ansible.builtin.stat:
    path: "/cvmfs/{{ cvmfs_test_repo }}"
  register: p

- name: Debugging
  ansible.builtin.debug:
    msg: "Can list cvmfs_test_repo"
  when: p.stat.isdir is defined and p.stat.isdir
